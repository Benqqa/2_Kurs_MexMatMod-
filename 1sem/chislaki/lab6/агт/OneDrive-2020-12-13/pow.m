A = dlmread('aMatEig.txt');
n=10
A=[0.995926738129672,0.130439081741873,0.555950297661514,0.406340538571691,0.532814919315665,0.269530399483834,0.306271542524230,0.810408559345297,0.389651863503332,0.746444765387883;0.0845759081843179,0.627205606328554,0.675617870426838,0.746484762704306,0.182685563964460,0.214308666208751,0.703486674923032,0.640792028256899,0.427661821927222,0.359858065620655;0.0152097849925669,0.457437816376705,0.511542572357165,0.438962001253926,0.984019403783819,0.971686900837108,0.452302364539994,0.558549765656607,0.221868768738848,0.376459343792471;0.199679991894817,0.676300156497016,0.564917427477828,0.848422888410349,0.692138138279285,0.943982405601316,0.940974981293467,0.679712542910056,0.752487649593838,0.153393740003616;0.807167164353770,0.707187127603622,0.0942140822312132,0.445405240217501,0.290446719636525,0.892184783389905,0.379123139559209,0.326516725074135,0.774913196723202,0.664153001862525;0.470186892994059,0.173622431847026,0.470120217297369,0.716189819602292,0.670495828306875,0.0338804287008102,0.889983990019519,0.453995238153309,0.435776269130768,0.178854842754043;0.312514713839175,0.504632547435598,0.168018005513045,0.656884225933811,0.574048771417769,0.300094981292294,0.244273018613402,0.665408891875684,0.0714493127043636,0.882597991996488;0.285839203927900,0.531881688772241,0.721045722595233,0.0672999613357741,0.817598599760374,0.342850648433353,0.0962707935391612,0.323922197020052,0.664482350646162,0.0121594179281838;0.980255229076050,0.536158902029936,0.982150327476123,0.613571426919919,0.250453215674924,0.214152568201472,0.213496261114552,0.368929132286495,0.431254609485506,0.0575886679258466;0.758295752382823,0.415750091301332,0.918918657106663,0.236158753239358,0.233696366928919,0.984141679754579,0.462795380558342,0.694256249837596,0.928290602532009,0.769750275251847]
n = length(A);
xp = ones(n,1);
L1 = ones(n,1);
L2 = xp+L1;

d = [1,2,3,4,5,6,7,8, 8, 9+10^-15];
D = diag(d);
[Q,R] = qr(A);
A1 = Q'*D*Q;
[V, Lam] = eig(A);
[V1, Lam1] = eig(A1);
[lm, ev]  = powerrrr(A, xp, L1, L2); %cч и св для матрицы А (хорошо отдлимое сч)
[lm1, ev1] = powerrrr(A1, xp, L1, L2); %cч и св для матрицы А1 (плохо отдлимое сч)

%проверка (A-lambda*E)=0
disp((A-lm*eye(n))*ev) %для матрицы A
disp((A1-lm1*eye(n))*ev1) %для матрицы А1
function [lm, ev] = powerrrr(A, xp, L1, L2)
    n = length(A);

    xn = A*xp;
    np = norm(xp, inf);
    xp1 = xp/np;
    xn1 = A*xp1;
    nn = norm(xn1,inf);

    Eps = [];
    Err = [];
    err = abs(np-nn);
    K = [];
    K1 = [];

    k = 0;
    k1 = 0;

    Err = [Err, L2-L1];
    for j = 1:15
        eps = 10^-j;
        while max(Err)>eps
            xp = xn;
            xn = A*xp;
            Err = [];
            for i = 1:n
                L1(i) = L2(i); %без нормировки
                L2(i) = xn(i)/xp(i);
                Err = [Err, L2(i)-L1(i)];
            end
            L1(1)
            k = k+1;
        end

        while err>eps
            xn1 = A*xp1;
            [row, col] = find(abs(xn1) == norm(xn1,inf));
            nn = xn1(row, col);
            xp1 = xn1/nn;
            err = abs(np-nn);
            np = nn; %с нормировкой
            k1 = k1+1;
        end
        Eps = [Eps, eps];
        K = [K, k];
        K1 = [K1, k1];
    end
    lm = nn;
    ev = xp1;
    % emax = [nn, 0, xn1.'];
    figure
    semilogx(Eps, K, '-r*')
    hold on
    grid on
    semilogx(Eps,K1, '-b*')
    title('Зависимость кол-ва итераций от точности')
    legend('без нормировки', 'с нормировкой')
    xlabel('Eps')
    ylabel('Кол-во итераций')
end